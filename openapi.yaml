openapi: 3.0.3
info:
  title: Voice Chat (Rooms + WebSocket Signaling)
  version: "1.0.0"
  description: |
    Минимальный API для VOICE-чата на базе Gin + WebSocket + WebRTC (SFU).
    REST покрывает создание/список комнат. WebSocket — сигналинг и события комнаты.

servers:
  - url: http://localhost:8080
    description: Local dev

paths:
  /rooms:
    get:
      summary: Список активных комнат
      operationId: listRooms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RoomItem"
                required: [items]
    post:
      summary: Создать (или получить) комнату
      operationId: createRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRoomResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /rooms/join:
    get:
      summary: WebSocket upgrade для вступления в комнату и сигналинга WebRTC
      description: |
        Эндпойнт выполняет **HTTP→WebSocket** апгрейд.
        Параметры передаются в query: `room_name`, `name`.
        После апгрейда обмен идёт JSON-сообщениями формата Envelope.
      parameters:
        - in: query
          name: room_name
          required: true
          schema:
            type: string
            example: rj183390
          description: Имя комнаты
        - in: query
          name: name
          required: true
          schema:
            type: string
            example: Николай
          description: Отображаемое имя участника
      responses:
        "101":
          description: Switching Protocols (WebSocket Upgrade)
        "400":
          description: Некорректные параметры или неудачный апгрейд
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    # ---------- REST ----------
    RoomItem:
      type: object
      properties:
        room_name:
          type: string
          example: rj183390
        members:
          type: integer
          format: int32
          example: 2
        updated_at:
          type: string
          format: date-time
          example: "2025-09-17T16:57:20Z"
      required: [room_name, members, updated_at]

    CreateRoomRequest:
      type: object
      properties:
        room_name:
          type: string
          example: rj183390
      required: [room_name]

    CreateRoomResponse:
      type: object
      properties:
        room_name:
          type: string
          example: rj183390
        created_at:
          type: string
          format: date-time
          example: "2025-09-17T16:55:10Z"
      required: [room_name, created_at]

    ErrorResponse:
      type: object
      properties:
        error:
            type: string
            example: room_name_required
      required: [error]

    # ---------- WebSocket Envelope ----------
    Envelope:
      type: object
      description: Обёртка всех WS-сообщений
      properties:
        type:
          type: string
          description: Тип события/команды
          enum:
            - connect
            - state.members
            - join.member
            - leave.member
            - ping
            - pong
            - webrtc.offer
            - webrtc.answer
            - webrtc.ice
            - error
          example: connect
        ts:
          type: string
          format: date-time
          description: Серверное время события (ISO-8601, UTC)
          example: "2025-09-17T17:00:00Z"
        request_id:
          type: string
          nullable: true
          description: Корреляция ответа на конкретную команду клиента
          example: "c0d1b2a3-4455-4f66-88aa-112233445566"
        data:
          description: Полезная нагрузка события
          oneOf:
            - $ref: "#/components/schemas/ConnectPayload"
            - $ref: "#/components/schemas/StateMembersPayload"
            - $ref: "#/components/schemas/JoinMemberPayload"
            - $ref: "#/components/schemas/LeaveMemberPayload"
            - $ref: "#/components/schemas/OfferPayload"
            - $ref: "#/components/schemas/AnswerPayload"
            - $ref: "#/components/schemas/ICEPayload"
            - $ref: "#/components/schemas/PingPayload"
            - $ref: "#/components/schemas/PongPayload"
            - $ref: "#/components/schemas/WsErrorPayload"
      required: [type]

    # ---------- WS Payloads ----------
    ConnectPayload:
      type: object
      properties:
        session_id:
          type: string
          description: Идентификатор участника (ULID/UUID)
          example: "01J7Z8M2J6Q5S9V1K3H4D7C8P0"
        room_name:
          type: string
          example: rj183390
        you:
          $ref: "#/components/schemas/StateMemberDTO"
      required: [session_id, room_name, you]

    StateMembersPayload:
      type: object
      properties:
        room_name:
          type: string
          example: rj183390
        items:
          type: array
          items:
            $ref: "#/components/schemas/StateMemberDTO"
      required: [room_name, items]

    StateMemberDTO:
      type: object
      properties:
        member_id:
          type: string
          example: "01J7Z8M2J6Q5S9V1K3H4D7C8P0"
        name:
          type: string
          example: Николай
      required: [member_id, name]

    JoinMemberPayload:
      type: object
      properties:
        room_name:
          type: string
          example: rj183390
        member:
          $ref: "#/components/schemas/StateMemberDTO"
      required: [room_name, member]

    LeaveMemberPayload:
      type: object
      properties:
        room_name:
          type: string
          example: rj183390
        member_id:
          type: string
          example: "01J7Z8M3A4B5C6D7E8F9G0H1I2"
      required: [room_name, member_id]

    OfferPayload:
      type: object
      description: Команда клиента — SDP Offer
      properties:
        room_name:
          type: string
          example: rj183390
        sdp:
          type: string
          description: Полный SDP-текст
        direction:
          type: string
          enum: [sendrecv, sendonly, recvonly]
          example: sendrecv
        media:
          type: object
          properties:
            audio: { type: boolean, example: true }
            video: { type: boolean, example: false }
          required: [audio, video]
      required: [room_name, sdp, direction, media]

    AnswerPayload:
      type: object
      description: Ответ сервера — SDP Answer
      properties:
        sdp:
          type: string
        codecs:
          type: array
          items:
            type: string
          example: ["opus/48000/2"]
      required: [sdp, codecs]

    ICEPayload:
      type: object
      description: ICE-кандидат (двусторонне)
      properties:
        candidate:
          type: string
          description: SDP-строка кандидата
        sdpMid:
          type: string
          nullable: true
          description: MID медиасекции
        sdpMLineIndex:
          type: integer
          nullable: true
          minimum: 0
          maximum: 65535
          description: Индекс медиалинии (m=) в SDP
      required: [candidate]

    PingPayload:
      type: object
      properties:
        # обычно кроме времени ничего не несёт
        # оставлено пустым по факту реализации
      additionalProperties: false

    PongPayload:
      type: object
      properties:
      additionalProperties: false

    WsErrorPayload:
      type: object
      properties:
        code:
          type: string
          example: offer_failed
        message:
          type: string
          example: empty_sdp
      required: [code, message]

  # Примеры можно добавить по желанию
